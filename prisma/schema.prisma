// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  identifier String  @unique
  password   String
  role       String
  avatar     String?
  username   String?
  email      String?
  files      File[]
  posts      Post[]
}

model Student {
  id                Int                @id @default(autoincrement())
  userId            Int?               @unique
  name              String             @default("User")
  nis               String             @default("0XXX")
  points            Int                @default(0)
  strikes           StudentStrike[]
  classroom         Classroom?         @relation(fields: [classroomId], references: [id])
  classroomId       Int?
  attendanceReports AttendanceReport[]
}

model Teacher {
  id                Int                @id @default(autoincrement())
  userId            Int?               @unique
  name              String             @default("User")
  studentStrikes    StudentStrike[]
  classroom         Classroom?         @relation(fields: [classroomId], references: [id])
  classroomId       Int?
  attendanceReports AttendanceReport[]
}

model Classroom {
  id       Int       @id @default(autoincrement())
  name     String
  students Student[]
  teachers Teacher[]
}

model StudentStrike {
  id        Int       @id @default(autoincrement())
  reason    String    @default("No reason")
  points    Int       @default(0)
  active    Boolean   @default(true)
  date      DateTime  @default(now())
  students  Student[]
  teacher   Teacher?  @relation(fields: [teacherId], references: [id])
  teacherId Int?
}

model File {
  id     Int    @id @default(autoincrement())
  name   String
  url    String
  user   User?  @relation(fields: [userId], references: [id])
  userId Int?
}

model Post {
  id        Int      @id @default(autoincrement())
  body      String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
}

model AttendanceReport {
  id        Int       @id @default(autoincrement())
  students  Student[]
  date      DateTime  @default(now())
  teacher   Teacher   @relation(fields: [teacherId], references: [id])
  teacherId Int
}
